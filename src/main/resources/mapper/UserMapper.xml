<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.plus.dao.UserDao">
    <!--需要些多表联查在这里写XML,一般的单表操作CRUD,分页等自带的方法就完全满足-->
    <select id="selectUserList" resultType="com.example.plus.entity.User"
            parameterType="com.example.plus.page.PageCondition">
        select * from user
        <where>
            <!-- 模糊用户名(注意注释方式是XML的)-->
            <if test="map.map.get('userName')!=null and map.map.get('userName')!='' ">
                and (user_name LIKE CONCAT('%','${map.map.get('userName')}','%' )
                or user_phone LIKE CONCAT('%','${map.map.get('userName')}','%' ))
            </if>
            <!-- 性别-->
            <if test="map.map.get('userSex')!=null and map.map.get('userSex')!=''">
                and (user_sex ='${map.map.get('userSex')}' )
            </if>
            <!-- 地址-->
            <if test="map.map.get('userSite')!=null and map.map.get('userSite')!=''">
                and (user_site ='${map.map.get('userSite')}' )
            </if>

            <if test="map.map.get('startTime')!=null and map.map.get('startTime')!='' and map.map.get('endTime')!=null and map.map.get('endTime')!=''">
                -- 创建时间
                and (create_time BETWEEN CONCAT('${map.map.get('startTime')}') AND
                CONCAT('${map.map.get('endTime')}' ))
            </if>
        </where>


    </select>
    <!--多表多字段的映射-->
    <select id="getBaseMap" resultType="java.util.Map" parameterType="com.example.plus.page.PageCondition">
        SELECT us.*,ad.address_region FROM user as us left JOIN address as ad ON us.user_id=ad.user_id
        <where>
            <if test="map.map.get('userName')!=null and map.map.get('userName')!='' ">
                and (us.user_name LIKE CONCAT('%','${map.map.get('userName')}','%' )
                or us.user_phone LIKE CONCAT('%','${map.map.get('userName')}','%' ))
            </if>
            <if test="map.map.get('userSex')!=null and map.map.get('userSex')!=''">
                and (us.user_sex ='${map.map.get('userSex')}' )
            </if>
        </where>


    </select>

    <!--多表含有其他字段的字段的额外字段-->

    <!--        <select id="getBaseMap2" resultType="java.util.Map" parameterType="com.example.plus.page.PageCondition">

             SELECT us.*,ad.address_region,(SELECT count(ad.address_id)) as totalNum FROM user as us left JOIN address as ad ON us.user_id='${map.map.get('userId')}' and ad.user_id='${map.map.get('userId')}'
                </select>-->

    <select id="getBaseMap2" resultType="java.util.Map" parameterType="com.example.plus.page.PageCondition">

         SELECT us.*,ad.address_region,(SELECT count(ad.address_id)) as totalNum FROM user as us left JOIN address as ad ON us.user_id='${map.map.get('userId')}' and ad.user_id='${map.map.get('userId')}'
            </select>
    <!--就是新增一个字段(统计地址数量)映射addressCount-->
    <select id="getUserMap" resultType="java.util.Map">
        SELECT us.*,(select count(address_id)  from address  where user_id=#{userId}) as addressCount from user as us where us.user_id=#{userId}
    </select>


    <!--查询用户地址(主要测试实体类封装List的处理)-->
    <select id="userAddressList" resultType="com.example.plus.entity.UserDto">

    </select>


    <!--根据用户ID查询地址列表-->
    <select id="getAddressList" resultType="com.example.plus.entity.Address">
        select * from address where user_id=#{userId}
    </select>

    <!--查询添加过字段的单表-->
    <select id="userMoreById" resultType="java.util.Map">
         select user.*,(SELECT count(address_id) from address where user_id=#{id}) as addressTotal  from user  where user_id=#{id}

    </select>


</mapper>
